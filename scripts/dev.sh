#!/bin/bash

# Script de d√©veloppement SwarmNode
# Lance tous les services en d√©veloppement

echo "üöÄ Lancement de SwarmNode en mode d√©veloppement..."

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}üìù $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# Fonction pour tuer les processus √† la fin
cleanup() {
    print_info "Arr√™t des services..."
    kill $(jobs -p) 2>/dev/null
    exit 0
}

# Trap pour nettoyer √† la sortie
trap cleanup SIGINT SIGTERM

# Se d√©placer dans le r√©pertoire racine
cd "$(dirname "$0")/.."

print_info "Installation des d√©pendances..."

# Installation des d√©pendances pour chaque service
if [ -d "website" ]; then
    print_info "Installation des d√©pendances du site web..."
    cd website && npm install --silent && cd ..
    print_success "D√©pendances du site web install√©es"
fi

if [ -d "frontend" ]; then
    print_info "Installation des d√©pendances du frontend..."
    cd frontend && npm install --silent && cd ..
    print_success "D√©pendances du frontend install√©es"
fi

if [ -f "package.json" ]; then
    print_info "Installation des d√©pendances principales..."
    npm install --silent
    print_success "D√©pendances principales install√©es"
fi

print_success "Toutes les d√©pendances sont install√©es"

echo ""
print_info "Lancement des services..."

# D√©marrer le site web
if [ -d "website" ]; then
    print_info "D√©marrage du site web (port 3000)..."
    cd website
    npm run dev &
    cd ..
    print_success "Site web d√©marr√©"
fi

# D√©marrer le frontend
if [ -d "frontend" ]; then
    print_info "D√©marrage du frontend (port 5173)..."
    cd frontend
    npm run dev &
    cd ..
    print_success "Frontend d√©marr√©"
fi

echo ""
print_success "üéâ Tous les services sont d√©marr√©s !"
echo ""
print_info "Services accessibles :"
if [ -d "website" ]; then
    echo -e "  ${GREEN}‚Ä¢ Site web:${NC} http://localhost:3000"
fi
if [ -d "frontend" ]; then
    echo -e "  ${GREEN}‚Ä¢ Frontend:${NC} http://localhost:5173"
fi
echo ""
print_warning "Appuyez sur Ctrl+C pour arr√™ter tous les services"

# Attendre ind√©finiment (les processus en arri√®re-plan continuent)
wait

trap cleanup SIGINT SIGTERM

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n'est pas install√©"
    exit 1
fi

# Installer les d√©pendances si n√©cessaire
if [ ! -d "node_modules" ]; then
    print_info "Installation des d√©pendances racine..."
    npm install
fi

# Lancer Hardhat en arri√®re-plan
print_info "D√©marrage du n≈ìud Hardhat local..."
npx hardhat node &
HARDHAT_PID=$!
sleep 3

# D√©ployer les contracts
print_info "D√©ploiement des smart contracts..."
npx hardhat run scripts/deploy.ts --network localhost || print_warning "√âchec du d√©ploiement - continuons quand m√™me"

# Lancer le frontend
print_info "D√©marrage du frontend..."
if [ -d "frontend" ]; then
    cd frontend
    if [ ! -d "node_modules" ]; then
        npm install
    fi
    npm run dev &
    FRONTEND_PID=$!
    cd ..
fi

# Lancer le site web
print_info "D√©marrage du site web..."
if [ -d "website" ]; then
    cd website
    if [ ! -d "node_modules" ]; then
        npm install
    fi
    npm run dev &
    WEBSITE_PID=$!
    cd ..
fi

print_success "Tous les services sont lanc√©s !"
echo ""
echo "üåê Services disponibles :"
echo "  - Blockchain locale : http://localhost:8545"
if [ -d "frontend" ]; then
    echo "  - Frontend Dashboard : http://localhost:5173"
fi
if [ -d "website" ]; then
    echo "  - Site Web : http://localhost:3000"
fi
echo ""
echo "Appuyez sur Ctrl+C pour arr√™ter tous les services"

# Attendre
wait
